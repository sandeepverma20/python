# -*- coding: utf-8 -*-
"""python_practice_extra.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13hzMAv8XkndFq9K28dUBDg_r6q9WwI4g

#Python practice

Write a program that contains a function that has one parameter, n, representing an integer
greater than 0. The function should return n! (n factorial). Then write a main function that calls this
function with the values 1 through 20, one at a time, printing the returned results. This is what your
output should look like:

1 1

2 2

3 6

4 24

5 120

6 720

7 5040

8 40320

9 362880
"""

def fact(n):
  f = 1
  for i in range(1,n+1):
    f = f*i
  return f

if __name__=="__main__":
  for i in range(1,21):
    print(i,fact(i))

"""Python Program to get Maximum product of elements of list in a 2D list
Input :  [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
Output : 504
Explanation:1*2*3 = 6, 4*5*6 = 120, 7*8*9 = 504
Since maximum is 504.

"""

def getmax(l):
  sublst = []
  result = []
  for i in range(0, len(l)):
    sublst = l[i]
    #print(sublst)
    p=1
    for j in sublst:
      p = p*j
    result.append(p)
  #print(result)
  return max(result)

if __name__=="__main__":
  lst =  [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
  print(getmax(lst))

"""Sum of number digits in List
The original list is : [12, 67, 98, 34]
List Integer Summation : [3, 13, 17, 7]

"""

l=[12,67,98,34]
new_lst=[]
for i in l:
  sum = 0
  while i!=0:
    sum = sum + i%10
    i=i//10  
  new_lst.append(sum)
print(new_lst)



"""Program to print duplicates from a list of integers

Input :  list = [-1, 1, -1, 8]
Output : output_list = [-1]

Input : list = [10, 20, 30, 20, 20, 30, 40, 50, -20, 60, 60, -20, -20]
Output : output_list = [20, 30, -20, 60]

"""

p =  [10, 20, 30, 20, 20, 30, 40, 50, -20, 60, 60, -20, -20] 
s=[]
for i in p:
  if p.count(i)>1:
    s.append(i)

e=list(set(s))
print(e)

"""------------------------------------------------------------------
Uncommon elements in Lists of List
The original list 1 : [[1, 2], [3, 4], [5, 6]]
The original list 2 : [[3, 4], [5, 7], [1, 2]]
The uncommon of two lists is : [[5, 6], [5, 7]]

------------------------------------------------------------------
"""

l1 = [[1,2], [3,4], [5,6]]
l2 = [[3,4], [5,7], [1,2]]
l3 = []
l4 = []

for i in l1:
  if i not in l2:
    l4.append(i)
    
for i in l2:
  if i not in l1:
    l4.append(i)


print(l4)



n=8888218321
sum = 0

while n!=0:
    temp=n%10
    sum = sum + temp
    n=n//10
    
print(sum)

import numpy as np

a = np.random.randint(1,100,20)
print("input numpy array: ", a)


def primeno(n):
  flag = False
  for i in range(2,n):
    if (n % i) == 0:
            # if factor is found, set flag to True
            flag = True
            # break out of loop
            break
  if not flag:
    return n

lst = []
for i in a:
  lst.append(primeno(i))
new_list = [i for i in lst if i is not None]
#print(new_list)
a1 = np.array(new_list)
print("output prime array: ", a1)

"""Reverse Row sort in Lists of List The original list is : [[4, 1, 6], [7, 8], [4, 10, 8]] The reverse sorted Matrix is : [[6, 4, 1], [8, 7], [10, 8, 4]]"""

l =  [[4, 1, 6], [7, 8], [4, 10, 8]]
for i in range(len(l)):
  l[i].sort(reverse=True)
print(l)

"""
Python program to find the sum of a Sublist
The original list is : [[4, 1, 6], [7, 8], [4, 10, 8]]
result is [11,15,22]
"""

l =  [[4, 1, 6], [7, 8], [4, 10, 8]]
newlst = []
for i in range(len(l)):
  temp = sum(l[i])
  newlst.append(temp)

  
print(newlst)

"""------------------------------------------------------------------
Python Program to Square Each Odd Number in a List using List Comprehension
data=[1,2,3,4,5,6,7]
[1, 9, 25, 49]       
"""

l= [1,2,3,4,5,6,7]
lst = [ x**2 for x in l if x%2==1]
print(lst)

"""
---------------------------------------------------------------
Python program to print even length words in a string
Input: s = "This is a python language"
Output: This is python language"""

s = "This is a python language" 
s1 = s.split(" ")
s2 = [x for x in s1 if len(x)%2==0]
f = " ".join(s2)
print(f)

"""Python program to capitalize the first and last character of each word in a string
Given the string, the task is to capitalise the first and last character of each word in a string. Examples:

Input: hello world 
Output: HellO WorlD
"""

string = "hello world"

#method 1
s1 = string.split(" ")
lst = []
one = []
for i in range(0,len(s1)):
  lst.append(s1[i][1:-1])
  temp = s1[i][0].upper()+lst[i]+s1[i][-1].upper()
  one.append(temp)

f = " ".join(one)
print(f)

#method 2
print(string[0:][0].upper()+string[1:4]+string[4].upper()+" "+string[6].upper()+string[7:-1]+string[-1].upper())

"""---------------------------------------------------------

Python program to check if a string has at least one letter and one number
Given a string in Python. The task is to check whether the string has at least one letter(character) and one number. Return “True” if the given string full fill above condition else return “False” (without quotes).
Examples: 

Input: welcome2ourcountry34
Output: True

Input: stringwithoutnum
Output: False

----------------------------------------------------------------------
"""

string = "stringwithoutnum"

a = 0
b = 0
for i in string:
  if i.isdigit():
    a = 1
    continue
  elif i.isalpha():
    b = 1
    continue

c = a and b
if c:
  print("True")
else:
  print("False")

"""----------------------------------------------------
returns a list of Least Frequent Character in String
string="welcometoknowit"
least frequency char :[ 'l', 'c', 'o', 'm', 'k', 'n', 'i']

----------------------------------------------------

"""

string = "welcometoknowit"

lst = []
for i in string:
  if string.count(i)%2==1:
    lst.append(i)

new = list(set(lst))
print(new)

"""---------------------------------------------------

Given a String list, extract frequency of specific characters in the whole strings list.

Input : test_list = [“geeksforgeeks is best for geeks”], chr_list = [‘e’, ‘b’, ‘g’, ‘f’] 

Output : {‘g’: 3, ‘e’: 7, ‘b’: 1, ‘f’ : 2} 

---------------------------------------------------------
"""

test_list = ["geeksforgeeks is best for geeks"]

a = 0
b = 0
c = 0
d = 0
for i in test_list[0]:
  if i == 'e':
    a+=1
  elif i == 'b':
    b+=1
  elif i == 'g':
    c+=1
  elif i == 'f':
    d+=1

chr_list = ['e', 'b', 'g', 'f']
dictionary = dict(zip(chr_list, [a,b,c,d]))
print(dictionary)

string = "ebgf"
# method 2
#d = { chr_list[i]:i for i in test_list[0] if i in chr_list}
#print(d)

import re
s = "The quick brown fox jumps over the lazy dog."

print("findall: ",re.findall('o',s))
print("search: ",re.search('o',s))
print("split: ",re.split('o',s))
print("sub: ",re.sub('o',"oo",s))

for i in re.finditer('o',s):
  print(i)


pat = re.compile(r'o')

# String operations problem

mySubject = "Computer Science"
print(mySubject[0:len(mySubject)]) #Computer Science
print(mySubject[-7:-1])
print(mySubject[::2])
print(mySubject[len(mySubject)-1])
print(2*mySubject)
print(mySubject[::-2])
print(mySubject[:3] + mySubject[3:])
print(mySubject.swapcase())
print(mySubject.startswith('Comp'))
print(mySubject.isalpha())

myAddress = "WZ-1, New Ganga Nagar, New Delhi"
print(myAddress.lower()) # all lowercase
print(myAddress.upper()) # all uppercase
print(myAddress.count('New')) #counts the term new
print(myAddress.find("New"))
print(myAddress.rfind("New"))
print(myAddress.split(','))
print(myAddress.split(' '))
print(myAddress.replace('New', 'Old'))
print(myAddress.partition(','))
#print(myAddress.index('Agra'))

string = "ABCDCD"
print(string.count("CD"))

mystring = input("Enter till ENTER pressed: ")

words = 0
alpha = 0
digit = 0
special = 0

print("Total characters: ",len(mystring))

# FOR WORDS
words_list = mystring.split()
for i in words_list:
  if i.isalpha():
    words+=1

# FOR EVERYTHING ELSE
s = mystring.replace(" ", "")
lst = list(s)
for i in lst:
  if i.isalpha():
    alpha+=1    
  elif i.isdigit():
    digit+=1
  else:
    special+=1

print("Total alphabets: ",alpha)
print("Total digits: ",digit)
print("Total special characters: ",special)
print("Total word count", words)

# list has to return max of the 3
# 1 is sum of positive numbers
# 2 is sum of negative numbers
# 3 is sum of 0's 
# whichever is greater has to be returned 

a = [1, 2, -3, 4, 0, 0, -3, -2]
p = [x for x in a if x>0]
n = [x for x in a if x<0]
z = [x for x in a if x==0]
psum = sum(p)
nsum = sum(n)
zsum = sum(z)

lst = [psum, (nsum*-1), zsum]
m = max(lst)
if m == (nsum*-1):
  print(m*-1)
else:
  print(m)

def usrTitle(s):
  print(s)
  lst = s.split()
  a = []
  for i in lst: 
    a.append(i[0].upper()+i[1:])
  f = " ".join(a)
  return f

s1 = input("enter string: ")
usrTitle(s1)

def deleteChar(string,character):
  result = ""
  for i in string:
    if i == character:
      pass
    else:
      result += i
  return result

print(deleteChar("this is my string", 's'))

def SumDigits(string):
  cnt = 0
  for i in string:
    if i.isdigit():
      cnt = cnt + int(i)
  return cnt



print(SumDigits("this is my string 1234"))

def PutHyphen(string):
  return string.replace(" ", "-")

s = "this is my string with many words"
print(PutHyphen(s))

stRecord = ['Raman','A-36',[56,98,99,72,69],78.8]
# name, rolno, marks in 5 subjects, percentage 
print("Percentage of Student: ", stRecord[-1])
print("Marks in the 5th subject: ", stRecord[2][-1])
print("Maximum marks of student: ", max(stRecord[2]))
print("Roll No of student: ", stRecord[1])
stRecord[0]='Raghav'
print("Name Change: ", stRecord)

def CntElement(l, k):
  cnt = 0
  for i in l:
    cnt+=1
  return cnt

lst = [55, 22, 44, 22, 55, 11, 55, 66, 39]
print(CntElement(lst, '55'))

num = int(input("Enter number of integers you want: "))
lst = []
for i in range(0, num):
  lst.append(int(input()))
p = [ x for x in lst if x>0]
n = [ x for x in lst if x<0]
print("First: ", lst)
print("Second: ", p)
print("Third: ", n)

def LargestNumber(a):
  p = [x for x in a if x>0]
  n = [x*-1 for x in a if x<0]
  z = [x for x in a if x==0]
  psum = max(p)
  nsum = max(n)
  zsum = max(z)

  lst = [psum, nsum, zsum]
  
  m = max(lst)
  if m == nsum:
    return (m*-1)
  else:
    return m 


lst =  [-1, -4, 5, 7, 99, 44, 32, -5, 945, 234, 0]
print(LargestNumber(lst))

"""___________________________________________________________________
5. Write a program to read a list of n integers and find
their median.
Note: The median value of a list of values is the
middle one when they are arranged in order. If there
are two middle values then take their average.
Hint: You can use an built-in function to sort the list

"""

# 1 -2 -5 6 3 -2 -6 32 12 

lst = list(map(int, input().split()))
lst.sort()
print("sorted list of ints:",lst)
#print("# of elements in list:",len(lst))
med = 0
l = len(lst)
print(lst[(l//2)], l)
if l%2 == 1:
  med = lst[(l//2)]
elif l%2 == 0:
  med = (lst[(l//2)]+lst[(l//2)-1])/2

print(med)

"""___________________________________________________________________
6. Write a program to read a list of elements. Modify
this list so that it does not contain any duplicate
elements, i.e., all elements occurring multiple times
in the list should appear only once.
"""

lst = list(set(input().split()))
print(lst)

"""___________________________________________________________________
7. Write a program to read a list of elements. Input
an element from the user that has to be inserted in
the list. Also input the position at which it is to be
inserted. Write a user defined function to insert the
element at the desired position in the list.
_________________________________________________
"""

# accept list, index, value
a = [1,2,3,4,5]
idx = 4
value= 6

def insert_element(a,i,e):
    b=a[:i] + [e] + a[i:]
    return b

result = insert_element(a,idx,value)
print(result)

"""___________________________________________________________________
8. Write a program to read elements of a list.
a) The program should ask for the position of
the element to be deleted from the list. Write
a function to delete the element at the desired
position in the list.
b) The program should ask for the value of the
element to be deleted from the list. Write a
function to delete the element of this value
from the list.
___________________________________________________________________
"""

lst = input().split()
pos = int(input("Enter pos to delete: "))

def delete_element_index(a, i):
  b = []
  b = a[:i-1] + a[i:]
  return b

result = delete_element_index(lst, pos)
print(result)

lst = input().split()
value = input("Enter value to delete: ")

def delete_element_value(a, v):
  b = list(filter(lambda x: x!= v, a))
  return b
result = delete_element_value(lst, value)
print(result)

"""
Write a program to input your friend’s, names and their
phone numbers and store them in the dictionary as the
key-value pair. Perform the following operations on the
dictionary:
a) Display the Name and Phone number for all your
friends.
b) Add a new key-value pair in this dictionary and
display the modified dictionary
2022-23
78 Informatics Practices – Class XI
c) Delete a particular friend from the dictionary
d) Modify the phone number of an existing friend
e) Check if a friend is present in the dictionary or not
f) Display the dictionary in sorted order of names"""

names = list(map(str, input().split()))
phones = list(map(int, input().split()))

phonedir = dict(zip(names, phones))
print(phonedir)

def addnew()